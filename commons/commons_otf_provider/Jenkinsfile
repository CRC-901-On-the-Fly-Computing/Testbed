def projectName = "commons_otf_provider"
def fullProjectName = "sfb901-testbed/${projectName}"
def nexus = "nexus.cs.upb.de"
def deploymentName = projectName.replace("_","-")
//With / at the end but not the beginning
def projectPath = "commons/"
def projectDomain = projectPath[0..-2].replace("_","-")
def newTag = "nexus.cs.upb.de/sfb901-testbed/${projectName}:v${env.BUILD_ID}";

/*
def triggerList = ["OTFTestbed_otf_provider_otf_fuzzy_matcher","OTFTestbed_otf_provider_otf_proseco_configurator","OTFTestbed_otf_provider_otfp_refactored_gatekeeper",""]
triggerList = triggerList.dropRight(1)

*/

def buildProjects = true



podTemplate(inheritFrom: 'default') {
    node(POD_LABEL) {
		stage('Preparation') {
			checkout([
				$class: 'GitSCM',
				branches: scm.branches,
				doGenerateSubmoduleConfigurations: scm.doGenerateSubmoduleConfigurations,
				extensions: scm.extensions,
				userRemoteConfigs: scm.userRemoteConfigs
			])
		}
		stage("Cleanup"){
			withEnv(['GRADLE_OPTS="-Dorg.gradle.daemon=true"']) {
				sh """
				chmod +x ./gradlew
				./gradlew :${projectName}:clean :${projectName}:cleanBuild :${projectName}:cleanAssemble :${projectName}:cleanCheck
				"""
			}
		}
		stage("Assemble"){
			withEnv(['GRADLE_OPTS="-Dorg.gradle.daemon=true"']) {
				sh """
				chmod +x ./gradlew
				./gradlew :${projectName}:assemble
				"""
			}
		}
		stage("Check"){
			withEnv(['GRADLE_OPTS="-Dorg.gradle.daemon=true"']) {
				sh """
				chmod +x ./gradlew
				./gradlew :${projectName}:check
				"""
			}
		}
	}
}

